image: python:3.8
stages:
  - QA
  - coverage_deploy

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"





# Feel free to remove this in your generated project.
.disable_on_template: &disable_on_template
  rules:
    - if: '$CI_COMMIT_REF_NAME != "template"'


.django_before_script: &django_before_script |-
  pip install --cache-dir /cache -r requirements.txt
  python manage.py makemigrations
  python manage.py migrate
  python manage.py collectstatic --no-input

.coverage_artifacts: &coverage_artifacts
  artifacts:
    paths:
      - .coverage*
      - ./**/.cache/pip/

UnitTest:
  <<: *disable_on_template
  <<: *coverage_artifacts
  stage: QA
  before_script:
    - *django_before_script
  script:
    - coverage run --parallel --include="./*" --omit="manage.py,heizmeet/*"
      manage.py test --exclude-tag=functional

FunctionalTest:
  <<: *disable_on_template
  <<: *coverage_artifacts
  stage: QA
  before_script:
    - apt-get update -q
    - *django_before_script
  script:
    - coverage run --parallel --include="./*" --omit="manage.py,heizmeet/*"
      manage.py test --tag=functional


Coverage:
  <<: *disable_on_template
  stage: coverage_deploy
  before_script:
    - *django_before_script
    - pip install --cache-dir /cache coverage
    - coverage combine
  script:
    - coverage report -m
    - coverage html
  artifacts:
    paths:
      - kembara_artifact/
      - ./**/.cache/pip/


sonarqube-check:
  stage: coverage_deploy
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [ "" ]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  artifacts:
    paths:
      - ./**/.cache/pip/
  script:
    - sonar-scanner -D"sonar.projectKey=kembara-ppl-d_kembara-immanuel_AYZgZ2GboB3q0Wl8w3Pp" -D"sonar.sources=." -D"sonar.host.url=https://sonarqube.cs.ui.ac.id" -D"sonar.login=7e1bd6727eccdaf4a30f87bcd5acf1aaa33832b5"
  only:
    - main
    - staging
    - merge_requests
  allow_failure: true



deploy-heroku:
  image: ruby:3.2.1
  stage: coverage_deploy
  script:
    - gem install dpl
    - gem install faraday-net_http -v 2.1.0
    - dpl --provider=heroku --app=$HEROKU_APP_NAME --api-key=$HEROKU_API_KEY
    - export HEROKU_API_KEY=$HEROKU_API_KEY
  when: always
  artifacts:
    paths:
      - ./**/.cache/pip/
  environment:
    name: production
    url: $HEROKU_APP_HOST
  only:
    - main
    - staging
